name: Linting

on:
  push:
    branches:
      - main
      - master
      - dev
  pull_request:

env:
  DEFAULT_PYTHON: "3.10"

jobs:
  pre-commit:
    runs-on: "ubuntu-latest"
    name: Pre-commit
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Set up Python ${{ env.DEFAULT_PYTHON }}
        uses: actions/setup-python@v4.5.0
        with:
          python-version: ${{ env.DEFAULT_PYTHON }}

      - name: Upgrade pip
        run: |
          pip install --constraint=.github/workflows/constraints.txt pip
          pip --version

      - name: Install Python modules
        run: |
          pip install --constraint=.github/workflows/constraints.txt pre-commit black flake8 reorder-python-imports

      - name: Run pre-commit on all files
        run: |
          pre-commit run --all-files --show-diff-on-failure --color=always

  hacs:
    runs-on: "ubuntu-latest"
    name: HACS
    steps:
      - name: Check out the repository
        uses: "actions/checkout@v3"

      - name: HACS validation
        uses: "hacs/action@main"
        with:
          category: "integration"
          ignore: brands

  hassfest:
    runs-on: "ubuntu-latest"
    name: Hassfest
    steps:
      - name: Check out the repository
        uses: "actions/checkout@v3"

      - name: Hassfest validation
        uses: "home-assistant/actions/hassfest@master"
  tests:
    runs-on: "ubuntu-latest"
    name: Run tests
    steps:
      - name: Check out code from GitHub
        uses: "actions/checkout@v3"
      - name: Setup Python ${{ env.DEFAULT_PYTHON }}
        uses: "actions/setup-python@v4.5.0"
        with:
          python-version: ${{ env.DEFAULT_PYTHON }}
      - name: Install requirements
        run: |
          pip install --constraint=.github/workflows/constraints.txt pip
          pip install -r requirements_test.txt --constraint=.github/workflows/constraints.txt
      - name: Tests suite
        run: |
          pytest \
            --cov=./ \
            --cov-report=xml \
            --cov-report=term \
            --timeout=30 \
            --durations=10 \
            -n auto \
            -p no:sugar \
            -rA \
            tests
      - name: "Upload coverage to Codecov"
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
