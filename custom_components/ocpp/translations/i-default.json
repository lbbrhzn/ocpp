{
    "config": {
        "step": {
            "user": {
                "title": "OCPP Central System Configuration",
                "description": "If you need help with the configuration have a look here: https://github.com/lbbrhzn/ocpp",
                "data": {
                    "host": "Central system host address",
                    "port": "Central system port number",
                    "ssl": "Secure connection",
                    "ssl_certfile_path": "Path to SSL certificate or (None)",
                    "ssl_keyfile_path": "Path to SSL key or (None)",
                    "csid": "Central system identity",
                    "websocket_close_timeout": "Websocket close timeout (seconds)",
                    "websocket_ping_tries": "Websocket successive times to try connection before closing",
                    "websocket_ping_interval": "Websocket ping interval (seconds)",
                    "websocket_ping_timeout": "Websocket ping timeout (seconds)"
                }
            },
            "cp_user": {
                "title": "OCPP Charger Configuration",
                "description": "If you need help with the configuration have a look here: https://github.com/lbbrhzn/ocpp",
                "data": {
                    "cpid": "Charge point identity",
                    "max_current": "Maximum charging current",
                    "meter_interval": "Charging sample interval (seconds)",
                    "monitored_variables_autoconfig": "Automatic detection of OCPP Measurands",
                    "idle_interval": "Charger idle sampling interval (seconds)",
                    "skip_schema_validation": "Skip OCPP schema validation",
                    "force_smart_charging": "Force Smart Charging feature profile"
                }
            },
            "measurands": {
                "title": "OCPP Measurands",
                "description": "Select which measurand(s) should be used in Home Assistant.",
                "data": {
                    "Current.Export": "Current.Export: Instantaneous current flow from EV",
                    "Current.Import": "Current.Import: Instantaneous current flow to EV",
                    "Current.Offered": "Current.Offered: Maximum current offered to EV",
                    "Energy.Active.Export.Register": "Energy.Active.Export.Register: Active energy exported to the grid",
                    "Energy.Active.Import.Register": "Energy.Active.Import.Register: Active energy imported from the grid",
                    "Energy.Reactive.Export.Register": "Energy.Reactive.Export.Register: Reactive energy exported to the grid",
                    "Energy.Reactive.Import.Register": "Energy.Reactive.Import.Register: Reactive energy imported from the grid",
                    "Energy.Active.Export.Interval": "Energy.Active.Export.Interval: Active energy exported to the grid during last interval",
                    "Energy.Active.Import.Interval": "Energy.Active.Import.Interval: Active energy imported from the grid during last interval",
                    "Energy.Reactive.Export.Interval": "Energy.Reactive.Export.Interval: Reactive energy exported to the grid during last interval",
                    "Energy.Reactive.Import.Interval": "Energy.Reactive.Import.Interval: Reactive energy imported from the grid during last interval",
                    "Frequency": "Frequency: Powerline frequency",
                    "Power.Active.Export": "Power.Active.Export: Instantaneous active power exported by EV",
                    "Power.Active.Import": "Power.Active.Import: Instantaneous active power imported by EV",
                    "Power.Factor": "Power.Factor: Instantaneous power factor of total energy flow",
                    "Power.Offered": "Power.Offered: Maximum power offered to EV",
                    "Power.Reactive.Export": "Power.Reactive.Export: Instantaneous reactive power exported by EV",
                    "Power.Reactive.Import": "Power.Reactive.Import: Instantaneous reactive power imported by EV",
                    "RPM": "RPM: Fan speed in RPM",
                    "SoC": "SoC: State of charge of EV in percentage",
                    "Temperature": "Temperature: Temperature reading inside Charge Point",
                    "Voltage": "Voltage: Instantaneous AC RMS supply voltage"
                }
            }
        },
        "error": {
            "auth": "Username/Password is wrong.",
            "no_measurands_selected": "No measurand selected: please select at least one"
        },
        "abort": {
            "single_instance_allowed": "Only a single instance is allowed",
            "reauth_successful": "New charger configured"
        }
    },
    "exceptions": {
        "invalid_ocpp_key": {
            "message": "Invalid OCPP key"
        },
        "ocpp_call_error": {
            "message": "OCPP call failed: {message}"
        },
        "get_variables_error": {
            "message": "Failed to get variable: {message}"
        },
        "set_variables_error": {
            "message": "Failed to set variable: {message}"
        },
        "unavailable": {
            "message": "Charger is unavailable: {message}"
        }
    }
}